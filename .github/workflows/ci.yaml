# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

on:
  pull_request:
  schedule:
    - cron: "53 0 * * *" # Daily at 00:53 UTC
  # Triggered on push to branch "main" by .github/workflows/release.yaml
  workflow_call:

jobs:
  lint:
    name: Lint
    uses: canonical/data-platform-workflows/.github/workflows/lint.yaml@v26.0.0

  unit-test:
    name: Unit test charm
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Run tests
        run: tox run -e unit

  terraform-test:
    name: Terraform - Lint and Simple Deployment
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install terraform snap
        run: |
          sudo snap install terraform --channel=latest/stable --classic
      - name: lint charm module
        working-directory: ./terraform
        run: |
          terraform init
          terraform fmt
          terraform validate
      - name: lint test charm module
        working-directory: ./terraform/tests
        run: |
          terraform init
          terraform fmt
          terraform validate
      - name: run checks - prepare
        run: |
          sudo snap install juju --channel=3.6/beta --classic
          sudo snap install juju-wait --channel=latest/stable --classic
          sudo snap install jq
      - name: LXD setup
        run: |
          sudo snap refresh lxd --channel=latest/stable
          sudo adduser "$USER" 'lxd'
          # `newgrp` does not work in GitHub Actions; use `sg` instead
          sg 'lxd' -c "lxd waitready"
          sg 'lxd' -c "lxd init --auto"
          sg 'lxd' -c "lxc network set lxdbr0 ipv6.address none"
          sudo iptables -F FORWARD
          sudo iptables -P FORWARD ACCEPT
      - name: Juju setup
        run: |
          sg 'lxd' -c "juju bootstrap 'localhost' --config model-logs-size=10G"
          juju model-defaults logging-config='<root>=INFO; unit=DEBUG'
          juju add-model test
      - name: Terraform deploy
        working-directory: ./terraform/tests/
        run: |
          terraform apply  -var "model_name=test" -target null_resource.simple_deployment_juju_wait_deployment -auto-approve

  lib-check:
    name: Check libraries
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: |
          # Workaround for https://github.com/canonical/charmcraft/issues/1389#issuecomment-1880921728
          touch requirements.txt
      - name: Check libs
        uses: canonical/charming-actions/check-libraries@2.6.3
        with:
          credentials: ${{ secrets.CHARMHUB_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          use-labels: false
          fail-build: ${{ github.event_name == 'pull_request' }}

  check-terraform:
    name: Check Terraform
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform Module
        run: terraform init

      - name: Validate Terraform Module
        run: terraform validate -no-color

      - name: Validate terraform fmt
        run: |
          set +e 
          terraform fmt -recursive -check -diff
          FMT_STATUS="$?"
          if [[ "$FMT_STATUS" -ne 0 ]]; then
            echo "❌ terraform fmt failed" >> "$GITHUB_STEP_SUMMARY"
          fi
          exit "$FMT_STATUS"

  build:
    strategy:
      fail-fast: false
      matrix:
        path:
          - .
          - tests/integration/sharding_tests/application
          - tests/integration/relation_tests/new_relations/application-charm
    name: Build charm
    uses: canonical/data-platform-workflows/.github/workflows/build_charm.yaml@v26.0.0
    with:
      cache: false  # TODO: will change to `true` before merge
      charmcraft-snap-channel: latest/beta/data-platform  # TODO: remove after charmcraft 3.3 stable release
      path-to-charm-directory: ${{ matrix.path }}

  integration-test:
    name: Integration test charm
    needs:
      - lint
      - unit-test
      - build
    uses: canonical/data-platform-workflows/.github/workflows/integration_test_charm.yaml@v26.0.0
    with:
      artifact-prefix: packed-charm-cache-false  # TODO: revert cache
      cloud: lxd
      juju-agent-version: 3.6.1  # renovate: juju-agent-pin-minor
      _beta_allure_report: true
    permissions:
      contents: write # Needed for Allure Report beta
    secrets:
      integration-test: |
        {
          "AWS_ACCESS_KEY": "${{ secrets.AWS_ACCESS_KEY }}",
          "AWS_SECRET_KEY": "${{ secrets.AWS_SECRET_KEY }}",
          "GCP_ACCESS_KEY": "${{ secrets.GCP_ACCESS_KEY }}",
          "GCP_SECRET_KEY": "${{ secrets.GCP_SECRET_KEY }}",
        }
