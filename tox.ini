# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
;lib_path = {toxinidir}/lib/charms/operator_name_with_underscores
mongodb_lib_path = {toxinidir}/lib/charms/mongodb/
all_path = {[vars]src_path} {[vars]tst_path} {[vars]mongodb_lib_path} 

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
  AWS_ACCESS_KEY_1=${{ secrets.AWS_ACCESS_KEY_1 }}
  SECRET_KEY_1=${{ secrets.SECRET_KEY_1 }}
  AWS_ACCESS_KEY_2=${{ secrets.AWS_ACCESS_KEY_2 }}
  SECRET_KEY_2=${{ secrets.SECRET_KEY_2 }}
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    # flake8 version 5.0.0 & 5.0.1 has issues with `flake8.options.config`
    flake8==4.0.1
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    codespell {[vars]all_path}
    codespell . --skip .git --skip .tox --skip build --skip lib --skip venv --skip .mypy_cache
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    requests
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    coverage report

[testenv:charm-integration]
description = Run charm integration tests
deps =
    pytest
    juju==2.9.11 # juju 3.3.0 has issues with retrieving action results
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native  {[vars]tst_path}integration/test_charm.py --log-cli-level=INFO -s {posargs} --durations=0

[testenv:ha-integration]
description = Run high availability integration tests
deps =
    pytest
    juju==2.9.11 # juju 3.3.0 has issues with retrieving action results
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    pytest -vvv --tb native {[vars]tst_path}integration/ha_tests/test_ha.py --log-cli-level=INFO -s {posargs} --durations=0

[testenv:relation-integration]
description = Run new relation integration tests
deps =
    pytest
    juju==2.9.11 # juju 3.3.0 has issues with retrieving action results
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native {[vars]tst_path}integration/relation_tests/new_relations --log-cli-level=INFO -s {posargs} --durations=0

[testenv:legacy-integration]
description = Run legacy relation integration tests
deps =
    pytest
    juju==2.9.11 # juju 3.3.0 has issues with retrieving action results
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native {[vars]tst_path}integration/relation_tests/legacy_relations --log-cli-level=INFO -s {posargs} --durations=0


[testenv:tls-integration]
description = Run tls integration tests
deps =
    pytest
    juju==2.9.11 # juju 3.3.0 has issues with retrieving action results
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native {[vars]tst_path}integration/tls_tests --log-cli-level=INFO -s {posargs} --durations=0


[testenv:backup-integration]
description = Run backup integration tests
deps =
    pytest
    juju==2.9.11 # juju 3.3.0 has issues with retrieving action results
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native {[vars]tst_path}integration/backup_tests --log-cli-level=INFO -s {posargs} --durations=0


[testenv:integration]
description = Run all integration tests
deps =
    pytest
    juju==2.9.11 # juju 3.3.0 has issues with retrieving action results
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} --durations=0